name: "Release"
on:
  push:
#    tags:
#      - 'v*'

jobs:
  sign:
    environment: build
    name: "Release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i -g npm
      - run: npm install

      - name: Build
        run: npm run build


#      - name: "web-ext build"
#        id: web-ext-build
#        uses: kewisch/action-web-ext@v1
#        with:
#          cmd: build
#          source: dist/prod

#      - name: "web-ext sign"
#        id: web-ext-sign
#        uses: kewisch/action-web-ext@v1
#        with:
#          cmd: sign
#          source: ${{ steps.web-ext-build.outputs.target }}
#          channel: unlisted
#          apiKey: ${{ secrets.FIREFOX_API_KEY }}
#          apiSecret: ${{ secrets.FIREFOX_API_SECRET }}
#          timeout: 900000

      - name: Get the Source Tag
        id: get_source_tag
        run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}


      - name: "Create Release"
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
#           ${{ steps.web-ext-sign.outputs.target }}
            ./src/manifest.json
          tag_name: ${{ steps.get_source_tag.outputs.SOURCE_TAG }}
          release_name: Release ${{ steps.get_source_tag.outputs.SOURCE_TAG }}
          draft: true
          prerelease: true
